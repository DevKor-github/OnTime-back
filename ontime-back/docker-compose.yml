version: "3.8"

services:
  backend:
    build:
      context: .
      dockerfile: Dockerfile # Dockerfile 이름
    image: ontimedemo # 빌드된 백엔드 이미지
    container_name: ontime-container
    ports:
      - "8080:8080" # 호스트의 8080 포트를 컨테이너의 8080 포트로 매핑
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql-container-ontime:3306/ontime_db
      SPRING_DATASOURCE_USERNAME: ontime
      SPRING_DATASOURCE_PASSWORD: ${secrets.SPRING_DATASOURCE_PASSWORD}
      SPRING_APPLICATION_NAME: ${secrets.SPRING_APPLICATION_NAME}
      SPRING_JPA_HIBERNATE_DDL_AUTO: ${secrets.SPRING_JPA_HIBERNATE_DDL_AUTO}
      SPRING_DATASOURCE_DRIVER_CLASS_NAME: ${secrets.SPRING_DATASOURCE_DRIVER_CLASS_NAME}
      JWT_SECRET_KEY: ${secrets.JWT_SECRET_KEY}
      JWT_ACCESS_EXPIRATION: ${secrets.JWT_ACCESS_EXPIRATION}
      JWT_REFRESH_EXPIRATION: ${secrets.JWT_REFRESH_EXPIRATION}
      JWT_ACCESS_HEADER: ${secrets.JWT_ACCESS_HEADER}
      JWT_REFRESH_HEADER: ${secrets.JWT_REFRESH_HEADER}
      SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_GOOGLE_CLIENT_ID: ${secrets.SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_GOOGLE_CLIENT_ID}
      SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_GOOGLE_CLIENT_SECRET: ${secrets.SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_GOOGLE_CLIENT_SECRET}
      SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_GOOGLE_SCOPE: ${secrets.SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_GOOGLE_SCOPE}
      SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_GOOGLE_REDIRECT_URI: ${secrets.SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_GOOGLE_REDIRECT_URI}
      SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_GOOGLE_AUTHORIZATION_GRANT_TYPE: ${secrets.SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_GOOGLE_AUTHORIZATION_GRANT_TYPE}
      SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_GOOGLE_CLIENT_NAME: ${secrets.SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_GOOGLE_CLIENT_NAME}
      SPRING_SECURITY_OAUTH2_CLIENT_PROVIDER_GOOGLE_AUTHORIZATION_URI: ${secrets.SPRING_SECURITY_OAUTH2_CLIENT_PROVIDER_GOOGLE_AUTHORIZATION_URI}
      SPRING_SECURITY_OAUTH2_CLIENT_PROVIDER_GOOGLE_TOKEN_URI: ${secrets.SPRING_SECURITY_OAUTH2_CLIENT_PROVIDER_GOOGLE_TOKEN_URI}
      SPRING_SECURITY_OAUTH2_CLIENT_PROVIDER_GOOGLE_USER_INFO_URI: ${secrets.SPRING_SECURITY_OAUTH2_CLIENT_PROVIDER_GOOGLE_USER_INFO_URI}
      SPRING_SECURITY_OAUTH2_CLIENT_PROVIDER_GOOGLE_USER_NAME_ATTRIBUTE: ${secrets.SPRING_SECURITY_OAUTH2_CLIENT_PROVIDER_GOOGLE_USER_NAME_ATTRIBUTE}
      SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_KAKAO_CLIENT_ID: ${secrets.SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_KAKAO_CLIENT_ID}
      SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_KAKAO_SCOPE: ${secrets.SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_KAKAO_SCOPE}
      SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_KAKAO_REDIRECT_URI: ${secrets.SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_KAKAO_REDIRECT_URI}
      SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_KAKAO_AUTHORIZATION_GRANT_TYPE: ${secrets.SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_KAKAO_AUTHORIZATION_GRANT_TYPE}
      SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_KAKAO_CLIENT_NAME: ${secrets.SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_KAKAO_CLIENT_NAME}
      SPRING_SECURITY_OAUTH2_CLIENT_PROVIDER_KAKAO_AUTHORIZATION_URI: ${secrets.SPRING_SECURITY_OAUTH2_CLIENT_PROVIDER_KAKAO_AUTHORIZATION_URI}
      SPRING_SECURITY_OAUTH2_CLIENT_PROVIDER_KAKAO_TOKEN_URI: ${secrets.SPRING_SECURITY_OAUTH2_CLIENT_PROVIDER_KAKAO_TOKEN_URI}
      SPRING_SECURITY_OAUTH2_CLIENT_PROVIDER_KAKAO_USER_INFO_URI: ${secrets.SPRING_SECURITY_OAUTH2_CLIENT_PROVIDER_KAKAO_USER_INFO_URI}
      SPRING_SECURITY_OAUTH2_CLIENT_PROVIDER_KAKAO_USER_NAME_ATTRIBUTE: ${secrets.SPRING_SECURITY_OAUTH2_CLIENT_PROVIDER_KAKAO_USER_NAME_ATTRIBUTE}

    depends_on:
      - mysql # mysql 서비스가 실행된 이후에 backend를 실행

  mysql:
    image: mysql:8.0.34 # MySQL 8.0.34 이미지
    container_name: mysql-container-ontime
    environment:
      MYSQL_DATABASE: ontime_db
      MYSQL_USER: ontime
      MYSQL_PASSWORD: ${secrets.MYSQL_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${secrets.MYSQL_ROOT_PASSWORD}
    ports:
      - "3307:3306" # 호스트의 3306 포트를 컨테이너의 3306 포트로 매핑
    volumes:
      - mysql_data:/var/lib/mysql # MySQL 데이터를 지속적으로 저장

volumes:
  mysql_data: # MySQL 데이터를 저장할 볼륨 정의
