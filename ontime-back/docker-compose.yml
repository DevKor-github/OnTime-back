version: "3.8"

services:
  backend:
    build:
      context: .
      dockerfile: Dockerfile # Dockerfile 이름
    image: ontimedemo # 빌드된 백엔드 이미지
    container_name: ontime-container
    ports:
      - "80:8080"     # HTTP 요청을 Spring Boot 8080으로 전달
      - "443:8443"    # HTTPS 요청을 Spring Boot 8443으로 전달
    volumes:
      - /home/ubuntu/OnTime-back/ontime-back/src/main/resources/:/app/src/main/resources/
      - /home/ubuntu/OnTime-back/ontime-back/src/main/resources/key/:/app/resources/key/

    depends_on:
      - mysql # mysql 서비스가 실행된 이후에 backend를 실행

  mysql:
    image: mysql:8.0.34 # MySQL 8.0.34 이미지
    container_name: mysql-container-ontime
    environment:
      MYSQL_DATABASE: ontime_db
      MYSQL_USER: ontime
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      ONTIME_PASSWORD: ${ONTIME_PASSWORD}
      ONTIME_HOST: ${ONTIME_HOST}
    ports:
      - "3307:3306" # 호스트의 3306 포트를 컨테이너의 3306 포트로 매핑
    volumes:
      - mysql_data:/var/lib/mysql # MySQL 데이터를 지속적으로 저장
volumes:
  mysql_data: # MySQL 데이터를 저장할 볼륨 정의